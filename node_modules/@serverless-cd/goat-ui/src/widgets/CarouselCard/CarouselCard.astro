---

  import { Image } from "astro:assets";
  import { twMerge } from "tailwind-merge";
  const {
    time = '40s',
    direction = 'RTL',
    datasource = [],
  } = Astro.props;
  const slideTopDirection = direction =='LTR' ? 'CarouselCardLTR' : 'CarouselCardRTL';
  const slideBottomDirection = direction =='LTR' ? 'CarouselCardLTR2' : 'CarouselCardRTL2';
let html = '';

for (const item of datasource) {
  html += await Astro.slots.render('default', [item]);
}
---



<div class="flex flex-col items-center overflow-hidden">

  <div class="bottom-silder relative overflow-hidden md:flex hidden">
    <div class="slider flex shrink-0 p-0 list-none inline-block cursor-pointer whitespace-nowrap ">
      <Fragment set:html={html} />
    </div>
    <div class="slider flex shrink-0 p-0 list-none inline-block cursor-pointer whitespace-nowrap ">
      <Fragment set:html={html} />
    </div>
  </div>
  <!-- 移动端展示 -->
  <div class="md:hidden flex flex-wrap my-0 mx-[-8px] ">
    <div class={`w-full`}>
      <Fragment set:html={html} />
    </div>
  </div>
    
</div>




<style define:vars={{ time ,slideTopDirection,slideBottomDirection}}>

  .slider {
    white-space: nowrap;
    animation: var(--slideTopDirection) var(--time) linear infinite ;
    animation-delay: calc(var(--time) * -1);
  }
  @keyframes CarouselCardRTL {
    0% {
      transform: translateX(150%);
    }

    100% {
      transform: translateX(-50%);
    }
  }
  .bottom-silder > .slider:nth-child(2){
    animation: var(--slideBottomDirection) var(--time) linear infinite ;
    animation-delay: calc(var(--time) / -2);
  }
  @keyframes CarouselCardRTL2 {
  0% {
    transform: translateX(50%);
  }

  100% {
    transform: translateX(-150%);
  }
}
  .bottom-silder:hover > .slider {
    animation-play-state: paused;
  }


  @keyframes CarouselCardLTR {
    0% {
      transform: translateX(-50%);
    }

    100% {
      transform: translateX(150%);
    }
  }

  @keyframes CarouselCardLTR2 {
  0% {
    transform: translateX(-150%);
  }

  100% {
    transform: translateX(50%);
  }
}


</style>