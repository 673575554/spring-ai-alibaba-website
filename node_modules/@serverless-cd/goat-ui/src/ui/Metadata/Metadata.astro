---
// import merge from 'lodash.merge';
import lodash from "lodash";
import { AstroSeo } from "@astrolib/seo";
import type { Props as AstroSeoProps } from "@astrolib/seo";
import type { MetaData } from "./types";
import { adaptOpenGraphImages } from "../Image/images";
const merge = lodash.merge;

const getCanonical = (path = "", siteConfig): string | URL => {
  const url = String(new URL(path, siteConfig.site));
  if (siteConfig.trailingSlash == false && path && url.endsWith("/")) {
    return url.slice(0, -1);
  } else if (siteConfig.trailingSlash == true && path && !url.endsWith("/")) {
    return url + "/";
  }
  return url;
};

const {
  title,
  ignoreTitleTemplate = false,
  siteConfig = {
    site: "https://astro.build",
    language: "en",
    base: "/",
    trailingSlash: false,
  },
  canonical = String(getCanonical(String(Astro.url.pathname), siteConfig)),
  robots = {},
  description,
  openGraph = {},
  twitter = {},
} = Astro.props as MetaData;

const seoProps: AstroSeoProps = merge(
  {
    title: "",
    titleTemplate: "%s",
    canonical: canonical,
    noindex: true,
    nofollow: true,
    description: undefined,
    openGraph: {
      url: canonical,
      site_name: siteConfig?.name,
      images: [],
      locale: siteConfig.language,
      type: "website",
    },
    twitter: {
      cardType: openGraph?.images?.length ? "summary_large_image" : "summary",
    },
  },
  {
    title: title,
    titleTemplate: ignoreTitleTemplate ? "%s" : undefined,
    canonical: canonical,
    noindex: typeof robots?.index !== "undefined" ? !robots.index : undefined,
    nofollow:
      typeof robots?.follow !== "undefined" ? !robots.follow : undefined,
    description: description,
    openGraph: { url: canonical, ...openGraph },
    twitter: twitter,
  }
);
---

<AstroSeo
  {...{
    ...seoProps,
    openGraph: await adaptOpenGraphImages(
      seoProps?.openGraph,
      Astro.site || siteConfig.site
    ),
  }}
/>
