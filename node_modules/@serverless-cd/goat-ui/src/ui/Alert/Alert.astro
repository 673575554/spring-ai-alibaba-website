---
import type { Alert } from "./types";

const {
  bgTheme = "primary",
  textTheme = "secondary",
  text = "New software update available.<a href='#'>Learn more</a>",
  classes = {},
} = Astro.props as Alert;

const {
  container: containerClass = "",
  text: titleClass = "",
  button: buttonClass = "",
} = classes;
---

<div
  class={`w-full bg-${bgTheme} h-6 flex align-center justify-between top-0 ${containerClass}`}
>
  <span
    class={`m-auto text-${textTheme} text-sm leading-6 ${titleClass}`}
    set:html={text}
  />
  <button
    class=`close-button text-${textTheme} bg-${bgTheme} ${buttonClass} border-none cursor-pointer text-sm leading-6 mr-4`
  >
    &times
  </button>
</div>

<script>
  // handleAlertClose函数用于处理提示条的关闭逻辑。
  function handleAlertClose(button) {
    button.parentNode.style.display = "none";
    window.alertBarClosed = true;
  }

  // 检查localStorage中的状态，看是否需要显示提示条。
  function initAlertBar() {
    try {
      const alertBar = document.querySelector(".alert-bar");
      const closeButton = document.querySelector(".close-button");
      const isClosed = window.alertBarClosed || false;

      if (isClosed === true) {
        alertBar.style.display = "none";
      } else {
        closeButton.addEventListener("click", function () {
          handleAlertClose(closeButton);
        });
      }
    } catch (e) {
      console.log(e);
    }
  }

  // // 当页面加载时，调用initAlertBar函数。
  window.addEventListener("DOMContentLoaded", initAlertBar);

  // 监听astro页面切换事件：在新页面替换旧页面后立即触发的事件
  document.addEventListener("astro:after-swap", initAlertBar);
</script>
