---
import { twMerge } from "tailwind-merge";
import type { Props, IGroup } from "./types";

const {
  src,
  imgList = [],
  class: classes,
  groupClass,
  type = 'item',
  counter,
  indicator,
  isText = false,
  textClass,
}: Props = Astro.props;

const list  = imgList.map(v => {
  if(typeof v != 'string') {
    return v
  } else {
    return { src: v }
  }
})
---

{
  type === "group" && list ? (
    <div class={twMerge("avatar-group -space-x-6 rtl:space-x-reverse", groupClass || "")}>
      {list.map((v) =>
        isText ? (
          <div class="avatar placeholder">
            <div
              class={twMerge(
                "bg-neutral",
                "text-neutral-content",
                "rounded-full",
                "w-12",
                classes || "",
                v.class || "",
              )}
            >
              <span class={twMerge("text-3xl", textClass)}>{v.src}</span>
            </div>
          </div>
        ) : (
          <div class="avatar">
            <div class={twMerge("w-12", classes || "", v.class || "")}>
              <img src={v.src} />
            </div>
          </div>
        ),
      )}
      {counter ? (
        <div class="avatar placeholder">
          <div class="w-12 bg-neutral text-neutral-content">
            <span>{counter > 99 ? "99+" : counter}</span>
          </div>
        </div>
      ) : (
        ""
      )}
    </div>
  ) : (
    <div class={twMerge("avatar", indicator, isText ? "placeholder" : "")}>
      {isText ? (
        <div
          class={twMerge(
            "bg-neutral text-neutral-content rounded-full w-24",
            "rounded-none",
            classes || "",
          )}
        >
          <span class={twMerge("text-3xl", textClass)}>{src}</span>
        </div>
      ) : (
        <div class={twMerge("w-24", "rounded-none", classes || "")}>
          <img src={src} />
        </div>
      )}
    </div>
  )
}
